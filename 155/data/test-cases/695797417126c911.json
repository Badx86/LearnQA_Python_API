{"uid":"695797417126c911","name":"test_edit_user_unauthorized","fullName":"tests.test_user_edit.TestUserEdit#test_edit_user_unauthorized","historyId":"ac0bec173432e162bee21e5480267310","time":{"start":1709960891835,"stop":1709960894020,"duration":2185},"description":"This test checks the inability to edit a user when unauthorized","descriptionHtml":"<p>This test checks the inability to edit a user when unauthorized</p>\n","status":"failed","statusMessage":"AssertionError: Unexpected response content b'{\"error\":\"Auth token not supplied\"}'\nassert '{\"error\":\"Au...ot supplied\"}' == 'Auth token not supplied'\n  \n  - Auth token not supplied\n  + {\"error\":\"Auth token not supplied\"}\n  ? ++++++++++                       ++","statusTrace":"self = <tests.test_user_edit.TestUserEdit object at 0x7f8cae7dc090>\n\n    @allure.description(\"This test checks the inability to edit a user when unauthorized\")\n    def test_edit_user_unauthorized(self):\n        # Генерируем данные для регистрации пользователя\n        register_data = self.preapare_registration_data()\n        response1 = MyRequests.post(\"/user/\", data=register_data)\n        user_id = self.get_json_value(response1, \"id\")\n        new_name = \"Changed Name Unauth\"\n        # Отправляем запрос на редактирование пользователя без авторизации\n        response2 = MyRequests.put(f\"/user/{user_id}\", data={\"firstName\": new_name})\n        Assertions.assert_code_status(response2, 400)\n>       assert response2.content.decode(\n            \"utf-8\") == \"Auth token not supplied\", f\"Unexpected response content {response2.content}\"\nE       AssertionError: Unexpected response content b'{\"error\":\"Auth token not supplied\"}'\nE       assert '{\"error\":\"Au...ot supplied\"}' == 'Auth token not supplied'\nE         \nE         - Auth token not supplied\nE         + {\"error\":\"Auth token not supplied\"}\nE         ? ++++++++++                       ++\n\ntests/test_user_edit.py:80: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"This test checks the inability to edit a user when unauthorized","status":"failed","statusMessage":"AssertionError: Unexpected response content b'{\"error\":\"Auth token not supplied\"}'\nassert '{\"error\":\"Au...ot supplied\"}' == 'Auth token not supplied'\n  \n  - Auth token not supplied\n  + {\"error\":\"Auth token not supplied\"}\n  ? ++++++++++                       ++","statusTrace":"self = <tests.test_user_edit.TestUserEdit object at 0x7f8cae7dc090>\n\n    @allure.description(\"This test checks the inability to edit a user when unauthorized\")\n    def test_edit_user_unauthorized(self):\n        # Генерируем данные для регистрации пользователя\n        register_data = self.preapare_registration_data()\n        response1 = MyRequests.post(\"/user/\", data=register_data)\n        user_id = self.get_json_value(response1, \"id\")\n        new_name = \"Changed Name Unauth\"\n        # Отправляем запрос на редактирование пользователя без авторизации\n        response2 = MyRequests.put(f\"/user/{user_id}\", data={\"firstName\": new_name})\n        Assertions.assert_code_status(response2, 400)\n>       assert response2.content.decode(\n            \"utf-8\") == \"Auth token not supplied\", f\"Unexpected response content {response2.content}\"\nE       AssertionError: Unexpected response content b'{\"error\":\"Auth token not supplied\"}'\nE       assert '{\"error\":\"Au...ot supplied\"}' == 'Auth token not supplied'\nE         \nE         - Auth token not supplied\nE         + {\"error\":\"Auth token not supplied\"}\nE         ? ++++++++++                       ++\n\ntests/test_user_edit.py:80: AssertionError","steps":[{"name":"POST request to URL '/user/'","time":{"start":1709960891835,"stop":1709960892753,"duration":918},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"PUT request to URL '/user/94353'","time":{"start":1709960892753,"stop":1709960894019,"duration":1266},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"epic","value":"User Modification Tests"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_user_edit"},{"name":"subSuite","value":"TestUserEdit"},{"name":"host","value":"fv-az529-166"},{"name":"thread","value":"2307-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_user_edit"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":151,"unknown":0,"total":153},"items":[{"uid":"ef3f4de5214ba700","reportUrl":"https://Badx86.github.io/LearnQA_Python_API/154//#testresult/ef3f4de5214ba700","status":"failed","statusDetails":"AssertionError: Unexpected response content b'{\"error\":\"Auth token not supplied\"}'\nassert '{\"error\":\"Au...ot supplied\"}' == 'Auth token not supplied'\n  \n  - Auth token not supplied\n  + {\"error\":\"Auth token not supplied\"}\n  ? ++++++++++                       ++","time":{"start":1709874481130,"stop":1709874483146,"duration":2016}},{"uid":"7973b534f72c4947","reportUrl":"https://Badx86.github.io/LearnQA_Python_API/153//#testresult/7973b534f72c4947","status":"passed","time":{"start":1709788008532,"stop":1709788010517,"duration":1985}},{"uid":"c8f7f75da87fa6c1","reportUrl":"https://Badx86.github.io/LearnQA_Python_API/152//#testresult/c8f7f75da87fa6c1","status":"passed","time":{"start":1709701622525,"stop":1709701626037,"duration":3512}},{"uid":"27b29a269473e8c6","reportUrl":"https://Badx86.github.io/LearnQA_Python_API/151//#testresult/27b29a269473e8c6","status":"passed","time":{"start":1709615248008,"stop":1709615250047,"duration":2039}},{"uid":"8885c10a449e6d8a","reportUrl":"https://Badx86.github.io/LearnQA_Python_API/150//#testresult/8885c10a449e6d8a","status":"passed","time":{"start":1709530891664,"stop":1709530893685,"duration":2021}},{"uid":"e5dfac6aa5f4a102","reportUrl":"https://Badx86.github.io/LearnQA_Python_API/149//#testresult/e5dfac6aa5f4a102","status":"passed","time":{"start":1709442435618,"stop":1709442437516,"duration":1898}},{"uid":"5a0ee3dd23426d4a","reportUrl":"https://Badx86.github.io/LearnQA_Python_API/148//#testresult/5a0ee3dd23426d4a","status":"passed","time":{"start":1709356062050,"stop":1709356064339,"duration":2289}},{"uid":"9e701b5541b2816","reportUrl":"https://Badx86.github.io/LearnQA_Python_API/147//#testresult/9e701b5541b2816","status":"passed","time":{"start":1709269678975,"stop":1709269681149,"duration":2174}},{"uid":"e29191d423dbd856","reportUrl":"https://Badx86.github.io/LearnQA_Python_API/146//#testresult/e29191d423dbd856","status":"passed","time":{"start":1709183317604,"stop":1709183319598,"duration":1994}},{"uid":"ed433858fafe6fdb","reportUrl":"https://Badx86.github.io/LearnQA_Python_API/145//#testresult/ed433858fafe6fdb","status":"passed","time":{"start":1709096902069,"stop":1709096904450,"duration":2381}},{"uid":"c6d369c95bea29fe","reportUrl":"https://Badx86.github.io/LearnQA_Python_API/144//#testresult/c6d369c95bea29fe","status":"passed","time":{"start":1709010492692,"stop":1709010494630,"duration":1938}},{"uid":"5f618a14749049f5","reportUrl":"https://Badx86.github.io/LearnQA_Python_API/143//#testresult/5f618a14749049f5","status":"passed","time":{"start":1708924077398,"stop":1708924079677,"duration":2279}},{"uid":"6977091d1c1b4304","reportUrl":"https://Badx86.github.io/LearnQA_Python_API/142//#testresult/6977091d1c1b4304","status":"passed","time":{"start":1708837554895,"stop":1708837557099,"duration":2204}},{"uid":"798fd3850771d1a6","reportUrl":"https://Badx86.github.io/LearnQA_Python_API/141//#testresult/798fd3850771d1a6","status":"passed","time":{"start":1708751244059,"stop":1708751246429,"duration":2370}},{"uid":"429eccf54388c288","reportUrl":"https://Badx86.github.io/LearnQA_Python_API/140//#testresult/429eccf54388c288","status":"passed","time":{"start":1708664878820,"stop":1708664880780,"duration":1960}},{"uid":"2eb2855eb8d2b186","reportUrl":"https://Badx86.github.io/LearnQA_Python_API/139//#testresult/2eb2855eb8d2b186","status":"passed","time":{"start":1708578441405,"stop":1708578443681,"duration":2276}},{"uid":"7f072064cfc4e231","reportUrl":"https://Badx86.github.io/LearnQA_Python_API/138//#testresult/7f072064cfc4e231","status":"passed","time":{"start":1708492013606,"stop":1708492015900,"duration":2294}},{"uid":"4640bacb26a4dce8","reportUrl":"https://Badx86.github.io/LearnQA_Python_API/137//#testresult/4640bacb26a4dce8","status":"passed","time":{"start":1708405678571,"stop":1708405680682,"duration":2111}},{"uid":"cd57c97aa326d4c8","reportUrl":"https://Badx86.github.io/LearnQA_Python_API/136//#testresult/cd57c97aa326d4c8","status":"passed","time":{"start":1708319282361,"stop":1708319285945,"duration":3584}},{"uid":"c09cc2eeba338bc4","reportUrl":"https://Badx86.github.io/LearnQA_Python_API/135//#testresult/c09cc2eeba338bc4","status":"passed","time":{"start":1708232759831,"stop":1708232761812,"duration":1981}}]},"tags":[]},"source":"695797417126c911.json","parameterValues":[]}