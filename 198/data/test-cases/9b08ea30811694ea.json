{"uid":"9b08ea30811694ea","name":"test_delete_user_authorized_as_another_user","fullName":"tests.test_user_delete.TestUserDelete#test_delete_user_authorized_as_another_user","historyId":"f921dd3d5d139c34912ef23ea50982dc","time":{"start":1713676023006,"stop":1713676026328,"duration":3322},"description":"This test verifies that one user cannot delete another user","descriptionHtml":"<p>This test verifies that one user cannot delete another user</p>\n","status":"skipped","statusMessage":"XFAIL This test is expected to fail due to a known defect\n\nAssertionError: Unexpected status code 200\nassert 200 == 400\n +  where 200 = <Response [200]>.status_code","statusTrace":"self = <tests.test_user_delete.TestUserDelete object at 0x7f31e8bca610>\n\n    @pytest.mark.xfail(reason=\"This test is expected to fail due to a known defect\")\n    @allure.description(\"This test verifies that one user cannot delete another user\")\n    def test_delete_user_authorized_as_another_user(self):\n        # Создание двух пользователей\n        first_user_data = self.preapare_registration_data()\n        response_first_user = MyRequests.post(\"/user/\", data=first_user_data)\n        first_user_id = self.get_json_value(response_first_user, \"id\")\n        second_user_data = self.preapare_registration_data()\n        MyRequests.post(\"/user/\", data=second_user_data)\n    \n        # Авторизация под вторым пользователем\n        response1 = MyRequests.post(\"/user/login\",\n                                    data={'email': second_user_data['email'], 'password': second_user_data['password']})\n        auth_sid = self.get_cookie(response1, \"auth_sid\")\n        token = self.get_header(response1, \"x-csrf-token\")\n    \n        # Попытка удалить первого пользователя из-под учетной записи второго пользователя\n        response2 = MyRequests.delete(f\"/user/{first_user_id}\",\n                                      headers={\"x-csrf-token\": token},\n                                      cookies={\"auth_sid\": auth_sid})\n>       assert response2.status_code == 400, f\"Unexpected status code {response2.status_code}\"\nE       AssertionError: Unexpected status code 200\nE       assert 200 == 400\nE        +  where 200 = <Response [200]>.status_code\n\ntests/test_user_delete.py:71: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"This test verifies that one user cannot delete another user","status":"skipped","statusMessage":"XFAIL This test is expected to fail due to a known defect\n\nAssertionError: Unexpected status code 200\nassert 200 == 400\n +  where 200 = <Response [200]>.status_code","statusTrace":"self = <tests.test_user_delete.TestUserDelete object at 0x7f31e8bca610>\n\n    @pytest.mark.xfail(reason=\"This test is expected to fail due to a known defect\")\n    @allure.description(\"This test verifies that one user cannot delete another user\")\n    def test_delete_user_authorized_as_another_user(self):\n        # Создание двух пользователей\n        first_user_data = self.preapare_registration_data()\n        response_first_user = MyRequests.post(\"/user/\", data=first_user_data)\n        first_user_id = self.get_json_value(response_first_user, \"id\")\n        second_user_data = self.preapare_registration_data()\n        MyRequests.post(\"/user/\", data=second_user_data)\n    \n        # Авторизация под вторым пользователем\n        response1 = MyRequests.post(\"/user/login\",\n                                    data={'email': second_user_data['email'], 'password': second_user_data['password']})\n        auth_sid = self.get_cookie(response1, \"auth_sid\")\n        token = self.get_header(response1, \"x-csrf-token\")\n    \n        # Попытка удалить первого пользователя из-под учетной записи второго пользователя\n        response2 = MyRequests.delete(f\"/user/{first_user_id}\",\n                                      headers={\"x-csrf-token\": token},\n                                      cookies={\"auth_sid\": auth_sid})\n>       assert response2.status_code == 400, f\"Unexpected status code {response2.status_code}\"\nE       AssertionError: Unexpected status code 200\nE       assert 200 == 400\nE        +  where 200 = <Response [200]>.status_code\n\ntests/test_user_delete.py:71: AssertionError","steps":[{"name":"POST request to URL '/user/'","time":{"start":1713676023006,"stop":1713676023924,"duration":918},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"POST request to URL '/user/'","time":{"start":1713676023924,"stop":1713676024843,"duration":919},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"POST request to URL '/user/login'","time":{"start":1713676024844,"stop":1713676025319,"duration":475},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"DELETE request to URL '/user/96277'","time":{"start":1713676025319,"stop":1713676026327,"duration":1008},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"epic","value":"User Deletion Tests"},{"name":"tag","value":"@pytest.mark.xfail(reason='This test is expected to fail due to a known defect')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_user_delete"},{"name":"subSuite","value":"TestUserDelete"},{"name":"host","value":"fv-az1215-32"},{"name":"thread","value":"2291-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_user_delete"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":154,"passed":42,"unknown":0,"total":196},"items":[{"uid":"64749c976a59b798","reportUrl":"https://Badx86.github.io/LearnQA_Python_API/197//#testresult/64749c976a59b798","status":"passed","statusDetails":"XPASS This test is expected to fail due to a known defect","time":{"start":1713589669621,"stop":1713589674273,"duration":4652}},{"uid":"b9225377bdc3616a","reportUrl":"https://Badx86.github.io/LearnQA_Python_API/196//#testresult/b9225377bdc3616a","status":"passed","statusDetails":"XPASS This test is expected to fail due to a known defect","time":{"start":1713503266118,"stop":1713503270727,"duration":4609}},{"uid":"b6985f86c3bdab5a","reportUrl":"https://Badx86.github.io/LearnQA_Python_API/195//#testresult/b6985f86c3bdab5a","status":"passed","statusDetails":"XPASS This test is expected to fail due to a known defect","time":{"start":1713416894230,"stop":1713416898637,"duration":4407}},{"uid":"b998b4c0b804e4f3","reportUrl":"https://Badx86.github.io/LearnQA_Python_API/194//#testresult/b998b4c0b804e4f3","status":"passed","statusDetails":"XPASS This test is expected to fail due to a known defect","time":{"start":1713330459381,"stop":1713330464497,"duration":5116}},{"uid":"22d142fc0fd41be","reportUrl":"https://Badx86.github.io/LearnQA_Python_API/193//#testresult/22d142fc0fd41be","status":"passed","statusDetails":"XPASS This test is expected to fail due to a known defect","time":{"start":1713244091274,"stop":1713244095908,"duration":4634}},{"uid":"3bbb1651642ebd6","reportUrl":"https://Badx86.github.io/LearnQA_Python_API/192//#testresult/3bbb1651642ebd6","status":"passed","statusDetails":"XPASS This test is expected to fail due to a known defect","time":{"start":1713157653445,"stop":1713157658605,"duration":5160}},{"uid":"22abf68238372f2f","reportUrl":"https://Badx86.github.io/LearnQA_Python_API/191//#testresult/22abf68238372f2f","status":"passed","statusDetails":"XPASS This test is expected to fail due to a known defect","time":{"start":1713074065521,"stop":1713074070645,"duration":5124}},{"uid":"8955c510321a64a6","reportUrl":"https://Badx86.github.io/LearnQA_Python_API/190//#testresult/8955c510321a64a6","status":"passed","statusDetails":"XPASS This test is expected to fail due to a known defect","time":{"start":1712984940395,"stop":1712984945450,"duration":5055}},{"uid":"68c137c396e0830a","reportUrl":"https://Badx86.github.io/LearnQA_Python_API/189//#testresult/68c137c396e0830a","status":"passed","statusDetails":"XPASS This test is expected to fail due to a known defect","time":{"start":1712898441059,"stop":1712898445678,"duration":4619}},{"uid":"2315d81a62754446","reportUrl":"https://Badx86.github.io/LearnQA_Python_API/188//#testresult/2315d81a62754446","status":"passed","statusDetails":"XPASS This test is expected to fail due to a known defect","time":{"start":1712812058411,"stop":1712812062851,"duration":4440}},{"uid":"99e737ea5c86776a","reportUrl":"https://Badx86.github.io/LearnQA_Python_API/187//#testresult/99e737ea5c86776a","status":"passed","statusDetails":"XPASS This test is expected to fail due to a known defect","time":{"start":1712726905813,"stop":1712727180351,"duration":274538}},{"uid":"172b866ff21f932c","reportUrl":"https://Badx86.github.io/LearnQA_Python_API/186//#testresult/172b866ff21f932c","status":"passed","statusDetails":"XPASS This test is expected to fail due to a known defect","time":{"start":1712639238313,"stop":1712639243400,"duration":5087}},{"uid":"3990dadc825ba14d","reportUrl":"https://Badx86.github.io/LearnQA_Python_API/185//#testresult/3990dadc825ba14d","status":"passed","statusDetails":"XPASS This test is expected to fail due to a known defect","time":{"start":1712552876722,"stop":1712552881723,"duration":5001}},{"uid":"95855c0462bb6f84","reportUrl":"https://Badx86.github.io/LearnQA_Python_API/184//#testresult/95855c0462bb6f84","status":"passed","statusDetails":"XPASS This test is expected to fail due to a known defect","time":{"start":1712466474249,"stop":1712466478841,"duration":4592}},{"uid":"9289f2b4f6e56019","reportUrl":"https://Badx86.github.io/LearnQA_Python_API/183//#testresult/9289f2b4f6e56019","status":"passed","statusDetails":"XPASS This test is expected to fail due to a known defect","time":{"start":1712380055968,"stop":1712380060861,"duration":4893}},{"uid":"aa4de00578e5f542","reportUrl":"https://Badx86.github.io/LearnQA_Python_API/182//#testresult/aa4de00578e5f542","status":"passed","statusDetails":"XPASS This test is expected to fail due to a known defect","time":{"start":1712293637493,"stop":1712293642117,"duration":4624}},{"uid":"dd7e214d20ad9ea2","reportUrl":"https://Badx86.github.io/LearnQA_Python_API/181//#testresult/dd7e214d20ad9ea2","status":"passed","statusDetails":"XPASS This test is expected to fail due to a known defect","time":{"start":1712207275311,"stop":1712207279813,"duration":4502}},{"uid":"5feb1d4195acb394","reportUrl":"https://Badx86.github.io/LearnQA_Python_API/180//#testresult/5feb1d4195acb394","status":"passed","statusDetails":"XPASS This test is expected to fail due to a known defect","time":{"start":1712120846875,"stop":1712120851874,"duration":4999}},{"uid":"d12320fa5811cc6","reportUrl":"https://Badx86.github.io/LearnQA_Python_API/179//#testresult/d12320fa5811cc6","status":"passed","statusDetails":"XPASS This test is expected to fail due to a known defect","time":{"start":1712034425821,"stop":1712034430461,"duration":4640}},{"uid":"5e7802684015185d","reportUrl":"https://Badx86.github.io/LearnQA_Python_API/178//#testresult/5e7802684015185d","status":"passed","statusDetails":"XPASS This test is expected to fail due to a known defect","time":{"start":1711948070262,"stop":1711948075529,"duration":5267}}]},"tags":["@pytest.mark.xfail(reason='This test is expected to fail due to a known defect')"]},"source":"9b08ea30811694ea.json","parameterValues":[]}